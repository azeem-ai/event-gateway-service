name: CI/CD - Deployment to dev environment

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Package Lambdas
        run: npm run zip:all

      - name: Upload Lambda ZIPs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-zips
          path: |
            infrastructure/lambda/receiver.zip
            infrastructure/lambda/dispatcher.zip

  deploy-infra:
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
    defaults:
      run:
        working-directory: infra/environments/dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Lambda ZIPs
        uses: actions/download-artifact@v4
        with:
          name: lambda-zips
          path: infrastructure/lambda

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Terraform Init
        run: terraform init

      - name: Terraform fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve
